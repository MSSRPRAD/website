import{g as _,a as l,i as e,s as v,b as y,t as w,c as h}from"./entry-client-9186cabc.js";const k=w('<div class="bg-neutral-700 rounded-sm m-5 lg:w-2/5 border-black"><div class="p-4"><h3 class="text-2xl text-center font-semibold text-stone-100"></h3><p class="text-stone-300 pt-2 text-xl"></p><p class="text-2xl text-center font-semibold text-white pt-2">Tech Stack:</p><ul class="list-disc text-xl italic px-5 py-5"></ul><div class="flex flex-wrap justify-center mt-4"><a class="text-center mt-4 inline-block bg-blue-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded">View on GitHub</a><div class="container"><p class="text-sm text-center text-red-100 pt-5">Note: <!#><!/>'),R=w('<li class="text-xl text-stone-100">');function x(t){return(()=>{const s=_(k),p=s.firstChild,i=p.firstChild,a=i.nextSibling,r=a.nextSibling,o=r.nextSibling,u=o.nextSibling,n=u.firstChild,m=n.nextSibling,c=m.firstChild,d=c.firstChild,g=d.nextSibling,[S,f]=l(g.nextSibling);return e(i,()=>t.name),e(a,()=>t.description),e(o,()=>t.techStack.map(b=>(()=>{const $=_(R);return v($,"key",b),e($,b),$})())),e(c,()=>t.note,S,f),y(()=>v(n,"href",t.githubUrl)),s})()}const M=w('<div class="bg-inherit p-10"><h1 class="text-6xl text-center mb-10 font-bold pt-10">Projects</h1><hr class="border-solid border-black py-10"><div class="p-5 flex flex-row flex-wrap overflow-hidden justify-center h-2/5"><!#><!/><!#><!/><!#><!/><!#><!/>');function C(){return(()=>{const t=_(M),s=t.firstChild,p=s.nextSibling,i=p.nextSibling,a=i.firstChild,[r,o]=l(a.nextSibling),u=r.nextSibling,[n,m]=l(u.nextSibling),c=n.nextSibling,[d,g]=l(c.nextSibling),S=d.nextSibling,[f,b]=l(S.nextSibling);return e(i,h(x,{name:"IndicScriptSwap",description:"An application that transliterates text between various Indic and Roman scripts quickly. The program is compiled to wasm for a demo and is available as a Rust Crate",techStack:["Rust","Wasm"],githubUrl:"https://github.com/MSSRPRAD/IndicScriptSwap",note:"None"}),r,o),e(i,h(x,{name:"SanskritMetresRust",description:"An application that Identifies the scheme of a Sanskrit Verse. Identifies both matra based and vrtta based metres. Also uses levenshtein distance to identify the closest scheme for vrtta based metres.",techStack:["Rust"],githubUrl:"https://github.com/MSSRPRAD/SanskritMetresRust",note:"Needs to be rewritten as code is too unorganized"}),n,m),e(i,h(x,{name:"Personal Website",description:"My personal website",techStack:["SolidJS","Javascript","TailwindCSS"],githubUrl:"https://github.com/MSSRPRAD/Blog",note:"Styling could be made better."}),d,g),e(i,h(x,{name:"ML Models",description:"Implemented a few ML classification Models using only numpy and pandas python libraries. It was a group project done together with Dhruv Arora as part of our Machine Learning course.",techStack:["Python","Numpy","Pandas","Matplotlib"],githubUrl:"https://github.com/MSSRPRAD/ml-models",note:"Need to fix and add naive-bayes also to repo."}),f,b),t})()}export{C as default};
